{"ast":null,"code":"import { inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../Services/AuthService/auth.service';\nimport { map } from 'rxjs';\nimport { toObservable } from '@angular/core/rxjs-interop';\nexport const authGuard = (route, state) => {\n  const authService = inject(AuthService);\n  const router = inject(Router);\n  return toObservable(authService.currentUser).pipe(map(user => {\n    if (user) {\n      return true;\n    }\n    router.navigate(['auth'], {\n      queryParams: {\n        returnUrl: state.url\n      }\n    });\n    return false;\n  }) //map closed\n  ); //pipe closed\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}