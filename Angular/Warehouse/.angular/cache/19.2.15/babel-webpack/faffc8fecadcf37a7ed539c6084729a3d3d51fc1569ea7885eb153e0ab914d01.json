{"ast":null,"code":"import { inject } from '@angular/core';\nimport { FormBuilder, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { ApiService } from '../../../../Services/ApiService/api.service';\nimport { AuthService } from '../../../../Services/AuthService/auth.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { ActivatedRoute, Router, RouterLink } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nexport let BuyerProfileComponent = /*#__PURE__*/(() => {\n  class BuyerProfileComponent {\n    constructor() {\n      this.fb = inject(FormBuilder);\n      this.apiService = inject(ApiService);\n      this.authService = inject(AuthService);\n      this.toastr = inject(ToastrService);\n      this.router = inject(Router);\n      this.route = inject(ActivatedRoute);\n      // Component state\n      this.isLoading = false;\n      this.isEdit = false;\n      this.user = null;\n      this.profileForm = this.fb.group({\n        name: ['', [Validators.required, Validators.minLength(3)]],\n        address: ['', [Validators.required, Validators.minLength(10)]],\n        phone: ['', [Validators.required, Validators.pattern(/^[\\d\\s\\-+()]{10,15}$/)]],\n        paymentMode: ['', Validators.required]\n      });\n    }\n    /* ngOnInit(): void {\n       this.loadBuyerProfile();\n     }\n         private loadBuyerProfile(): void {\n       const userId = this.authService.getUserId();\n       if (!userId) {\n         this.toastr.error('User authentication required');\n         this.router.navigate(['/auth/login']);\n         return;\n       }\n           this.isLoading = true;\n       this.apiService.getBuyerByUserId(userId).pipe(\n         map(buyer => {\n           if (buyer) {\n             return {\n               ...buyer,\n               // Ensure dates are properly formatted\n              \n             };\n           }\n           return null;\n         })\n       ).subscribe({\n         next: (buyer) => {\n           if (buyer) {\n             this.currentBuyer = buyer;\n             this.isEdit = true;\n             this.buyerId = buyer.buyer_id;\n             this.patchFormValues(buyer);\n           }\n           this.isLoading = false;\n         },\n         error: (err) => {\n           this.toastr.error(err.error?.message || 'Failed to load profile');\n           this.isLoading = false;\n         }\n       });\n     }\n         private patchFormValues(buyer: Buyer): void {\n       this.profileForm.patchValue({\n         name: buyer.name,\n         address: buyer.address,\n         phone: buyer.phone,\n         paymentMode: buyer.paymentMode\n       });\n     }\n         onSubmit(): void {\n       if (this.profileForm.invalid) {\n        // this.markAllAsTouched();\n         return;\n       }\n           this.isLoading = true;\n       const formData = this.profileForm.value;\n           if (this.isEdit && this.buyerId) {\n         this.updateBuyerProfile(this.buyerId, formData!);\n       } else {\n         this.createBuyerProfile(formData,);\n       }\n     }\n         private updateBuyerProfile(id: number, data: Buyer): void {\n       this.apiService.updateBuyer(id, data).subscribe({\n         next: (updatedBuyer) => {\n           this.currentBuyer = updatedBuyer;\n           this.toastr.success('Profile updated successfully');\n           this.isLoading = false;\n         },\n         error: (err) => {\n           this.toastr.error(err.error?.message || 'Failed to update profile');\n           this.isLoading = false;\n         }\n       });\n     }\n         private createBuyerProfile(data: Partial<Buyer>): void {\n       const userId = this.authService.currentUser();\n       console.log('currentuser',userId);\n       \n       if (!userId || !userId.user_id) {\n         this.toastr.error('User authentication required');\n         this.isLoading = false;\n         return;\n       }\n       //   const buyerData:Buyer={\n       //   ...data,\n       //   name:data.name || '',\n       //   address:data.address || '',\n       //   phone:data.phone || '',\n       //   paymentMode:data.paymentMode || '',\n       //   user:{\n       //     user_id:userId?.user_id,\n       //     username:userId?.username ,\n       //     password:userId?.password ,\n       //     email:userId?.email ,\n       //     token:userId?.token ,\n       //     roles:userId?.roles\n       //   }\n       // }\n       \n         \n       this.apiService.createBuyer({...data,user:userId} as Buyer).subscribe({\n         next: (newBuyer) => {\n           console.log('newBuyer:',newBuyer);\n           this.currentBuyer = newBuyer;\n           this.isEdit = true;\n           this.buyerId = newBuyer.buyer_id;\n           this.toastr.success('Profile created successfully');\n           this.isLoading = false;\n         },\n         error: (err) => {\n           this.toastr.error(err.error?.message || 'Failed to create profile');\n           this.isLoading = false;\n         }\n       });\n     }\n         // private markAllAsTouched(): void {\n     //   Object.values(this.profileForm.controls).forEach(control => {\n     //     control.markAsTouched();\n     //   });\n     // }\n         // Helper method for template\n     formatDate(date: Date | string): string {\n       if (typeof date === 'string') {\n         date = new Date(date);\n       }\n       return date.toLocaleDateString('en-US', {\n         year: 'numeric',\n         month: 'long',\n         day: 'numeric'\n       });\n     }*/\n    logout() {\n      this.authService.logout();\n    }\n    static {\n      this.ɵfac = function BuyerProfileComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || BuyerProfileComponent)();\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: BuyerProfileComponent,\n        selectors: [[\"app-buyer-profile\"]],\n        decls: 33,\n        vars: 0,\n        consts: [[1, \"navbar\", \"navbar-expand-lg\", \"navbar-dark\", \"bg-dark\"], [1, \"container\"], [\"routerLink\", \"/buyer/profile\", 1, \"navbar-brand\"], [\"id\", \"navbar-item\", 1, \"navbar-nav\"], [1, \"nav-item\"], [1, \"nav-link\", \"btn-primary\", \"btn\", 3, \"click\"], [1, \"container\", \"mt-4\"], [1, \"row\"], [1, \"col-md-6\"], [1, \"card\", \"mb-4\"], [1, \"card-header\", \"bg-primary\", \"text-white\"], [1, \"mb-0\"], [1, \"card-body\"], [1, \"mb-3\"], [\"routerLink\", \"/buyer/create_orders\", 1, \"btn\", \"btn-info\", \"ms-2\"], [\"routerLink\", \"/buyer/orders\", 1, \"btn\", \"btn-info\", \"ms-2\"], [1, \"card\"], [1, \"card-header\", \"bg-warning\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-danger\", \"me-2\", 3, \"click\"]],\n        template: function BuyerProfileComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"nav\", 0)(1, \"div\", 1)(2, \"a\", 2);\n            i0.ɵɵtext(3, \"Buyer\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(4, \"ul\", 3)(5, \"li\", 4)(6, \"a\", 5);\n            i0.ɵɵlistener(\"click\", function BuyerProfileComponent_Template_a_click_6_listener() {\n              return ctx.logout();\n            });\n            i0.ɵɵtext(7, \"Logout\");\n            i0.ɵɵelementEnd()()()()();\n            i0.ɵɵelementStart(8, \"div\", 6)(9, \"div\", 7)(10, \"div\", 8)(11, \"div\", 9)(12, \"div\", 10)(13, \"h3\", 11);\n            i0.ɵɵtext(14, \"Order Product\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(15, \"div\", 12)(16, \"div\", 13)(17, \"strong\");\n            i0.ɵɵtext(18, \"Create Orders:\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(19, \"a\", 14);\n            i0.ɵɵtext(20, \"Create Order\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(21, \"div\", 13)(22, \"strong\");\n            i0.ɵɵtext(23, \"My Orders:\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(24, \"a\", 15);\n            i0.ɵɵtext(25, \"My Orders\");\n            i0.ɵɵelementEnd()()()();\n            i0.ɵɵelementStart(26, \"div\", 16)(27, \"div\", 17)(28, \"h3\", 11);\n            i0.ɵɵtext(29, \"Account Security\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(30, \"div\", 12)(31, \"button\", 18);\n            i0.ɵɵlistener(\"click\", function BuyerProfileComponent_Template_button_click_31_listener() {\n              return ctx.logout();\n            });\n            i0.ɵɵtext(32, \" Logout \");\n            i0.ɵɵelementEnd()()()()()();\n          }\n        },\n        dependencies: [CommonModule, ReactiveFormsModule, RouterLink],\n        encapsulation: 2\n      });\n    }\n  }\n  return BuyerProfileComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}