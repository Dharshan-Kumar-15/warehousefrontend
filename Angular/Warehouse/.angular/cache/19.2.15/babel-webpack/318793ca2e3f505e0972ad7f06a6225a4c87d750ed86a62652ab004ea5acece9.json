{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ApiService = /*#__PURE__*/(() => {\n  class ApiService {\n    constructor(http) {\n      this.http = http;\n      this.apiUrl = 'http://localhost:8080/';\n    }\n    gerUserId(id) {\n      return this.http.get(this.apiUrl + 'auth/getuser/' + `${id}`);\n    }\n    //Admin api's\n    getProducts() {\n      return this.http.get(this.apiUrl + 'admin/getproduct');\n    }\n    getProductId(id) {\n      return this.http.get(this.apiUrl + 'admin/getproduct/' + `${id}`);\n    }\n    // createProduct(product:Product):Observable<Product>{\n    //   return this.http.post<Product>(this.apiUrl+'admin/createproduct',product);\n    // }\n    // updateProduct(id:number,product: Product):Observable<Product>{\n    //   return this.http.put<Product>(this.apiUrl+'admin/updateproduct/'+`${id}`,product);\n    // }\n    createProduct(product, image) {\n      const formData = new FormData();\n      const productBlob = new Blob([JSON.stringify(product)], {\n        type: 'application/json'\n      });\n      formData.append('product', productBlob);\n      formData.append('imageFile', image);\n      return this.http.post(this.apiUrl + 'admin/createproduct', formData);\n    }\n    updateProduct(id, product, image) {\n      const formData = new FormData();\n      const productBlob = new Blob([JSON.stringify(product)], {\n        type: 'application/json'\n      });\n      formData.append('product', productBlob);\n      if (image) {\n        formData.append('imageFile', image, image.name);\n      }\n      return this.http.put(this.apiUrl + 'admin/updateproduct/' + `${id}`, formData);\n    }\n    deleteProduct(id) {\n      return this.http.delete(this.apiUrl + 'admin/deleteproduct/' + `${id}`);\n    }\n    //WareHouse api\n    getWarehouseItems() {\n      return this.http.get(this.apiUrl + 'warehouse/items');\n    }\n    getWarehouseItemsId(id) {\n      return this.http.get(this.apiUrl + 'warehouse/items/' + `${id}`);\n    }\n    createWarehouse(items) {\n      return this.http.post(this.apiUrl + 'warehouse/createwarehouse', items);\n    }\n    updateWarehouse(id, items) {\n      return this.http.put(this.apiUrl + 'warehouse/updatewarehouse/' + `${id}`, items);\n    }\n    deleteWarehouse(id) {\n      return this.http.delete(this.apiUrl + 'warehouse/deletewarehouse/' + `${id}`);\n    }\n    //Transaction\n    getTransport() {\n      return this.http.get(this.apiUrl + 'transport/shipments');\n    }\n    getTransportId(id) {\n      return this.http.get(this.apiUrl + 'transport/shipments/' + `${id}`);\n    }\n    createTransport(transport) {\n      return this.http.post(this.apiUrl + 'transport/createtransport', transport);\n    }\n    updateTransport(id, transport) {\n      return this.http.put(this.apiUrl + 'transport/updatetransport/' + `${id}`, transport);\n    }\n    deleteTransport(id) {\n      return this.http.delete(this.apiUrl + 'transport/deletetransport/' + `${id}`);\n    }\n    updateStatusTransport(id, status) {\n      return this.http.put(this.apiUrl + 'transport/updatestatus/' + `${id}`, status);\n    }\n    //Buyer\n    getBuyerByUserId(userId) {\n      return this.http.get(this.apiUrl + 'buyer/profile/' + `${userId}`);\n    }\n    getBuyerId(buyerId) {\n      return this.http.get(this.apiUrl + 'buyer/profiles/' + `${buyerId}`);\n    }\n    createBuyer(buyer) {\n      return this.http.post(this.apiUrl + 'buyer/createprofile', buyer);\n    }\n    updateBuyer(id, buyer) {\n      return this.http.put(this.apiUrl + 'buyer/updateprofile/' + `${id}`, buyer);\n    }\n    getBuyerOrders(buyer_id) {\n      return this.http.get(this.apiUrl + 'buyer/buyerorders/' + `${buyer_id}`);\n    }\n    createOrder(order) {\n      return this.http.post(this.apiUrl + 'buyer/createorder', order);\n    }\n    getOrderDetails(id) {\n      return this.http.get(this.apiUrl + 'buyer/orders/details/' + `${id}`);\n    }\n    getImage(id) {\n      return this.http.get(this.apiUrl + 'admin/getimage/' + `${id}`);\n    }\n    getOrders() {\n      return this.http.get(this.apiUrl + 'buyer/orders');\n    }\n    getOrderById(id) {\n      return this.http.get(this.apiUrl + 'buyer/orders/' + `${id}`);\n    }\n    updateOrderStatus(id, status) {\n      return this.http.put(this.apiUrl + 'buyer/orderstatus/' + `${id}`, status);\n    }\n    deleteOrder(id) {\n      console.log('apiserivce:');\n      return this.http.delete(this.apiUrl + 'buyer/deleteorders/' + `${id}`);\n    }\n    deleteOrderItem(id) {\n      console.log('apiserivce:');\n      return this.http.delete(this.apiUrl + 'buyer/deleteordersitem/' + `${id}`);\n    }\n    getOrderItemId(ide) {\n      return this.http.get(this.apiUrl + 'buyer/getorderitem/' + `${ide}`);\n    }\n    static {\n      this.ɵfac = function ApiService_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || ApiService)(i0.ɵɵinject(i1.HttpClient));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: ApiService,\n        factory: ApiService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return ApiService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}