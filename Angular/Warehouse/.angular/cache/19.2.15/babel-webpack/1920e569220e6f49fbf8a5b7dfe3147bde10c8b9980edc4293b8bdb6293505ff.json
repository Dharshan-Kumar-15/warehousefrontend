{"ast":null,"code":"import { authGuard } from './AuthGuard/authguard/auth.guard';\nimport { roleGuard } from './AuthGuard/roleguard/role.guard';\nexport const routes = [\n//Login and Register\n{\n  path: 'auth',\n  loadChildren: () => import('./Components/Auth/auth.routes').then(m => m.AUTH_ROUTES)\n},\n// Redirect \n{\n  path: '',\n  redirectTo: 'admin',\n  pathMatch: 'full'\n}, {\n  path: 'admin',\n  loadChildren: () => import('./Components/Admin/admin.routes').then(m => m.ADMIN_ROUTES),\n  canActivate: [authGuard, roleGuard],\n  data: {\n    roles: ['ROLE_ADMIN'],\n    renderMode: 'client'\n  }\n}, {\n  path: 'buyer',\n  loadChildren: () => import('./Components/Buyer/buyer.routes').then(m => m.BUYER_ROUTES),\n  canActivate: [authGuard, roleGuard],\n  data: {\n    roles: ['ROLE_BUYER'],\n    renderMode: 'client'\n  }\n}, {\n  path: 'warehouse',\n  loadChildren: () => import('./Components/Warehouse/warehouse.routes').then(m => m.WAREHOUSE_ROUTES),\n  canActivate: [authGuard, roleGuard],\n  data: {\n    roles: ['ROLE_WAREHOUSE'],\n    renderMode: 'client'\n  }\n}, {\n  path: 'transport',\n  loadChildren: () => import('./Components/Transport/transport.routes').then(m => m.TRANSPORT_ROUTES),\n  canActivate: [authGuard, roleGuard],\n  data: {\n    roles: ['ROLE_TRANSPORTATION'],\n    renderMode: 'client'\n  }\n}];","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}